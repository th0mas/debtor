openapi: 3.0.0

info:
  title: Debtor
  version: v1
  description: The REST api used by the debtor frontend
servers:
  - url: http://localhost:5000
  - url: https://api.debtor.tomhaines.xyz
  
paths:
  /users:
    get:
      description: Returns a list of all users
      operationId: getUsers
      parameters: 
        - name: Query
          in: query
          required: false
          description: Optional query to filter users
          schema:
            type: string
      responses:
        200:
          description: User response
          content:
            application/json:
              schema:
                type: array
                items:
                  $ref: '#/components/schemas/User'
    post:
      description: Creates a new user
      operationId: addUser
      requestBody:
        description: User to add to the application
        required: true
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/NewUser'
      responses:
        '200':
          description: User created
    
  /users/{uuid}:
    get:
      description: Returns and induvidual user
      operationId: getUserByUuid
      parameters: 
        - name: uuid
          in: path
          required: true
          schema:
            type: integer
      responses:
        404: 
          description: Not Found
        200:
          description: user response
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/User'
components:
  schemas:
    User:
      allOf:
        - $ref: '#/components/schemas/NewUser'
        - required:
          - uuid
        - properties:
          uuid:
            type: integer
            format: int32
            readOnly: true
          debts:
            type: array
            items:
              $ref: '#/components/schemas/Debt'
    NewUser:
      required:
        - email
        - name
        - colour
      properties:
        name:
            type: string
        email:
          type: string
          format: email
        uuid:
          type: integer
          format: int32
          readOnly: true
        colour:
          type: string
          pattern: '^#([A-Fa-f0-9]{6}|[A-Fa-f0-9]{3})$'
        profile_img:
          type: string
          format: URI
            
    Debt:
      properties:
        time_created:
          type: string
          format: date-time
        uuid:
          type: integer
          format: int32
          readOnly: true
        debtor:
          type: integer
          format: int32
        creditor:
          type: integer
          format: int32
        amount:
          type: number
          format: integer
          description: Amount owed in pence
        paid:
          type: boolean
        